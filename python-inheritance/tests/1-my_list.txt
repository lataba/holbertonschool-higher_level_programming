The ``2-my_list.py`` module
==================================
This module defines the class ``MyList``.

Using ``my_list``
------------------------

Test 1

    >>> MyList = __import__('1-my_list').MyList
    >>> my_list = MyList()
    >>> type(my_list)
    <class '1-my_list.MyList'>

Test 2
    >>> print(my_list)
    []

Test 3
    >>> my_list = MyList([1, 2, 3])
    >>> print(my_list)
    [1, 2, 3]

Test 4
    >>> my_list = MyList(None)
    Traceback (most recent call last):
    TypeError: 'NoneType' object is not iterable

Test 6
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> print(my_list)
    [1, 2, 3]

Test 7
    >>> my_list[0] = 5
    >>> print(my_list)
    [5, 2, 3]

Test 8
    >>> my_list.remove(5)
    >>> print(my_list)
    [2, 3]

Test 9
    >>> my_list = MyList()
    >>> print(my_list.print_sorted)
    <bound method MyList.print_sorted of []>

Test 10
    >>> my_list.print_sorted(1)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given

Test 11
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Test 12
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Test 13
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Test 14
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []