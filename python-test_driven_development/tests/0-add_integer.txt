The ``0-add_integer`` module
============================
This module contains only one function: add_integer.

Using ``add_integer``
---------------------

First import
============ 

First import ``add_integer`` from the ``0-add_integer`` module 
    
    >>> add_integer = __import__('0-add_integer').add_integer
    
Normal use
==========

    >>> add_integer(1, 6)
    7

    >>> add_integer(-2, -1)
    -3

    >>> add_integer(0.9, 0.2)
    0

    >>> add_integer(1.5, -3)
    -2

    >>> add_integer(3)
    101

Exceptions
==========

If a and b are any type other than int or float, the function will raise a TypeError exception
    
    >>> add_integer("hello", 5)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(3, "hello")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(4, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(1, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
    