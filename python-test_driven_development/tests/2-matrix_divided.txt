The ``2-matrix_divided.py`` module
==================================
This module contains the function matrix_divided.

Using ``matrix_divided``
------------------------

First import
============
First import ``matrix_divided`` from the ``2-matrix_divided`` module.

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Normal use
==========

Test 1
    >>> matrix = [ [1, 2, 3], [4, 5, 6] ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test 2
    >>> matrix = [ [1, 2.2, 3], [4.1, 5.1, 6] ]
    >>> print(matrix_divided(matrix, 3.14159))
    [[0.32, 0.7, 0.95], [1.31, 1.62, 1.91]]

Exceptions
==========

Test 1 - matrix not a list:
    >>> matrix = (1, 2, 3)
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 2 - empty list:
    >>> matrix = []
    >>> matrix_divided(matrix, 3)
    []

Test 3 - matrix not a list of lists:
    >>> matrix = [1, 2, 3]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 4 - empty lists as elements of matrix are okay as long as they are all empty:
    >>> matrix = [ [], [], [] ]
    >>> matrix_divided(matrix, 3)
    [[], [], []]

Test 5 - second order lists have any non-int or non-float:
    >>> matrix = [ [1, '2', 3], [4, 5, ()] ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 6 - second order lists not equal length:
    >>> matrix = [ [1, 2, 3], [4, 5, 6, 7] ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Teste 7 - div is non-int or non-float:
    >>> matrix = [ [1, 2, 3], [4, 5, 6] ]
    >>> matrix_divided(matrix, '3')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Test 8 - div is 0:
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
